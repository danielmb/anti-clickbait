name: Deploy website
on:
  workflow_dispatch:
  push:
    paths:
      - server/**/*
      - .github/workflows/server.yml
    branches:
      - master
      - testing
jobs:
  build:
    runs-on: self-hosted
    strategy:
      matrix:
        node-version: [19.x]
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      PRIVATE_KEY_PATH: ${{ secrets.PRIVATE_KEY_PATH }}
      CERTIFICATE_PATH: ${{ secrets.CERTIFICATE_PATH }}
      PASSWORD: ${{ secrets.PASSWORD }}
      DEPLOYMENT_PATH: ~/www
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Copy prisma folder to server from ./prisma to ./server/prisma
        run: |
          mkdir -p ./server
          cp -r ./prisma ./server/prisma
      - name: npm install, build
        run: |
          cd ./server
          npm install
          npx prisma generate
          npm run build
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: server
          path: ./server/dist
  testing:
    runs-on: self-hosted
    needs: build
    strategy:
      matrix:
        node-version: [19.x]
    environment: testing
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      PRIVATE_KEY_PATH: ${{ secrets.PRIVATE_KEY_PATH }}
      CERTIFICATE_PATH: ${{ secrets.CERTIFICATE_PATH }}
      PASSWORD: ${{ secrets.PASSWORD }}
      DEPLOYMENT_PATH: /home/anticlickbait/testing
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: server
          path: ./server/dist
      - name: Copy prisma folder to server from ./prisma to ./server/prisma
        run: |
          mkdir -p ./server
          cp -r ./prisma ./server/prisma
      - name: Move server
        run: |
          cd ./server
          mkdir -p $DEPLOYMENT_PATH
          rsync -av --progress --exclude='node_modules' ./ $DEPLOYMENT_PATH
      - name: npm install, build
        run: |
          cd $DEPLOYMENT_PATH
          npm install
          npx prisma generate
          npm run build
      - name: pm2 restart if exists else start
        env:
          PORT: 3000
        run: |
          cd $DEPLOYMENT_PATH
          pm2 restart anticlickbaitTesting --update-env || pm2 start npm --name anticlickbaitTesting -- start -- --port $PORT --DATABASE_URL $DATABASE_URL  --PRIVATE_KEY_PATH $PRIVATE_KEY_PATH --CERTIFICATE_PATH $CERTIFICATE_PATH
  deploy:
    runs-on: self-hosted
    needs: build
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    environment: production
    strategy:
      matrix:
        node-version: [19.x]
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      PRIVATE_KEY_PATH: ${{ secrets.PRIVATE_KEY_PATH }}
      CERTIFICATE_PATH: ${{ secrets.CERTIFICATE_PATH }}
      PASSWORD: ${{ secrets.PASSWORD }}
      DEPLOYMENT_PATH: /home/anticlickbait/www
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: server
          path: ./server/dist
      - name: Copy prisma folder to server from ./prisma to ./server/prisma
        run: |
          mkdir -p ./server
          cp -r ./prisma ./server/prisma
      - name: Move server
        run: |
          cd ./server
          mkdir -p $DEPLOYMENT_PATH
          rsync -av --progress --exclude='node_modules' ./ $DEPLOYMENT_PATH
      # - name: Just write all the secrets to a file I dont care anymore
      #   run: |
      #     echo "DATABASE_URL=$DATABASE_URL" > $DEPLOYMENT_PATH/.env
      #     echo "PRIVATE_KEY_PATH=$PRIVATE_KEY_PATH" >> $DEPLOYMENT_PATH/.env
      #     echo "CERTIFICATE_PATH=$CERTIFICATE_PATH" >> $DEPLOYMENT_PATH/.env
      #     echo "PASSWORD=$PASSWORD" >> $DEPLOYMENT_PATH/.env

      - name: npm install, build
        run: |
          cd $DEPLOYMENT_PATH
          npm install
          npx prisma migrate deploy
          npx prisma generate
          npm run build
      # - name: pm2 restart if exists else start
      #   env:
      #     PORT: 30000
      #     # set database url
      #   run: |
      #     cd $DEPLOYMENT_PATH
      #     # pm2 restart anticlickbait --update-env || pm2 start npm --name anticlickbait -- start -- --port $PORT --DATABASE_URL $DATABASE_URL  --PRIVATE_KEY_PATH $PRIVATE_KEY_PATH --CERTIFICATE_PATH $CERTIFICATE_PATH
      - name: PM2 startOrRestart
        run: |
          cd $DEPLOYMENT_PATH
          pm2 startOrRestart ecosystem.config.js --update-env
        env:
          PORT: 30000
